{{- $harmonySettings := include "adaptive.harmony.settings" . | fromJson }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "adaptive.harmony.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "adaptive.labels" . | nindent 4 }}
    {{- include "adaptive.harmony.selectorLabels" . | nindent 4 }}
spec:
  serviceName: {{ include "adaptive.harmony.headlessService.fullname" . }}
  replicas: {{ .Values.harmony.replicaCount | default 1 | int }}
  selector:
    matchLabels:
      {{- include "adaptive.harmony.selectorLabels" . | nindent 6}}
  template:
    metadata:
      {{- with .Values.harmony.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "adaptive.labels" . | nindent 8 }}
        {{- include "adaptive.harmony.selectorLabels" . | nindent 8 }}
        {{- with .Values.harmony.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      {{- if .Values.harmony.nodeSelector}}
      nodeSelector:
         {{- with .Values.harmony.nodeSelector}}
         {{ toYaml . }}
         {{- end}}
      {{- end}}
      {{- if .Values.harmony.tolerations}}
      tolerations:
        {{- toYaml .Values.harmony.tolerations | nindent 8 }}
      {{- end}} 
      initContainers:
      - name: init-permissions
        image: busybox
        command: ['sh', '-c', 'chown -R  1002:1000 {{ $harmonySettings.working_dir }} {{ $harmonySettings.shared_master_worker_folder }} {{ $harmonySettings.any_path_config.cloud_cache }}']
        securityContext:
          runAsUser: 0
        volumeMounts:
          - name: workdir-volume
            mountPath: {{ $harmonySettings.working_dir }}
          - name: cloud-cache-volume
            mountPath: {{ $harmonySettings.any_path_config.cloud_cache }}
          # extra volume Mounts from values.yaml
          {{- with .Values.volumeMounts }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      containers:
        - name: harmony
          image: "{{ include "adaptive.harmony.imageUri" . }}"
          imagePullPolicy: {{ .Values.harmony.image.pullPolicy }}
          {{- if .Values.harmony.securityContext }}
          securityContext:
            {{- toYaml .Values.harmony.securityContext | nindent 12 }}
          {{- end }}
          resources:
            limits:
              {{- toYaml .Values.harmony.resources.limits | nindent 14 }}
              {{- if .Values.harmony.gpusPerReplica}}
              nvidia.com/gpu: {{ .Values.harmony.gpusPerReplica }}
              {{- end}}
            requests:
              {{- toYaml .Values.harmony.resources.requests | nindent 14 }}
              {{- if .Values.harmony.gpusPerReplica}}
              nvidia.com/gpu: {{ .Values.harmony.gpusPerReplica }}
              {{- end}}
          ports:
            {{- $ports := include "adaptive.harmony.ports" . | fromJson }}
            - containerPort: {{ $ports.http.containerPort }}
              name: {{ $ports.http.name }}
            - containerPort: {{ $ports.queue.containerPort }}
              name: {{ $ports.queue.name }}
            - containerPort: {{ $ports.torch.containerPort }}
              name: {{ $ports.torch.name }} 
          envFrom:
            - secretRef:
                name: {{ include "adaptive.harmony.configSecret.fullname" . }}
          env:
            - name: IMAGE_TAG
              value: {{ .Values.harmony.image.tag | quote }}
            - name: ORDINAL
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
            - name: GPU_COUNT
              value: "{{ .Values.harmony.gpusPerReplica | default 1 }}"
            - name: WORLD_SIZE
              value: "{{ mul (int .Values.harmony.replicaCount) (int .Values.harmony.gpusPerReplica) | default .Values.harmony.replicaCount }}"
            - name: MASTER_ADDR
              value: "{{ include "adaptive.harmony.fullname" . }}-0.{{ include "adaptive.harmony.headlessService.fullname" . }}"
            - name: MASTER_PORT
              value: "{{ $ports.torch.containerPort }}"
            - name: QUEUE_PORT
              value: "{{ $ports.queue.containerPort }}"
            - name: CONTROL_PLANE_URL
              value: "{{ include "adaptive.controlPlane.privateHttpEndpoint" . }}"
            - name: GROUP
              value: {{ .Values.harmony.group }}
            - name: GROUP_CAPABILITIES
              value: "TRAINING,INFERENCE,EVALUATION"
            - name: PARTITION_KEY
              value: {{ .Values.harmony.partitionKey }}
            - name: SERVICE_URL
              value: "{{ include "adaptive.harmony.httpEndpoint" . }}"
            - name: ADAPTIVE_LOGGING_LEVEL
              value: info
            {{- if .Values.s3proxy.enabled }}
            - name: AWS_ENDPOINT_URL
              value: http://{{ .Values.s3proxy.fullnameOverride }}
            - name: S3_FORCE_PATH_STYLE
              value: "true"
            {{- end }}
            - name: ADAPTIVE_MODE
              value: PROD
            - name: JOB_LOG_DIR
              value: "{{ $harmonySettings.working_dir }}/job_logs"
            {{- if .Values.mlflow.enabled }}
            - name: MLFLOW_TRACKING_URI
              value: "http://{{ include "adaptive.mlflow.service.fullname" . }}:{{ (include "adaptive.mlflow.ports" . | fromJson).http.port }}"
            {{- else if .Values.tensorboard.enabled }}
            - name: TENSORBOARD_LOGGING_DIR
              value: "/logdir"
            {{- end }}
            {{- if .Values.harmony.extraEnvVars }}
            {{- range $key, $value := .Values.harmony.extraEnvVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
          volumeMounts:
            - name: workdir-volume
              mountPath: {{ $harmonySettings.working_dir }}
            - name: cloud-cache-volume
              mountPath: {{ $harmonySettings.any_path_config.cloud_cache }}
            - name: harmony-settings-volume
              mountPath: /opt/adaptive/harmony_settings/docker.json
              subPath: docker.json
            - name: dshm
              mountPath: /dev/shm
            {{- if .Values.tensorboard.enabled }}
            - name: tensorboard-volume
              mountPath: /logdir
            {{- end }}
            # extra volume Mounts from values.yaml
            {{- with .Values.volumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- if .Values.tensorboard.enabled }}
        - name: tensorboard
          image: "{{ include "adaptive.tensorboard.imageUri" . }}"
          imagePullPolicy: {{ .Values.tensorboard.image.pullPolicy }}
          ports:
            - containerPort: {{ $ports.tensorboard.containerPort }}
              name: {{ $ports.tensorboard.name }}
          command:
            - "tensorboard"
            - "--logdir=/logdir"
            - "--host=0.0.0.0"
            - "--port={{ $ports.tensorboard.containerPort }}"
          {{- if .Values.tensorboard.resources }}
          resources:
{{ toYaml .Values.tensorboard.resources | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: tensorboard-volume
              mountPath: /logdir
        {{- end }}
        - name: job-log-exporter
          image: {{ .Values.alloy.imageUri }}
          imagePullPolicy: {{ .Values.alloy.image.pullPolicy }}
          ports:
            - containerPort: {{ $ports.alloy.containerPort }}
              name: {{ $ports.alloy.name }}
          args:
            - "run"
            - "--server.http.listen-addr=0.0.0.0:{{ $ports.alloy.containerPort }}"
            - "--storage.path=/var/lib/alloy/data"
            - "/etc/alloy/config.alloy"
          {{- if .Values.alloy.resources }}
          resources:
{{ toYaml .Values.alloy.resources | indent 12 }}
          {{- end }}
          volumeMounts:
            - name: workdir-volume
              mountPath: /workdir/
            - name: alloy-config
              mountPath: "/etc/alloy"
      volumes:
        - name: cloud-cache-volume
          emptyDir: {}
        - name: workdir-volume
          emptyDir: {}
        - name: harmony-settings-volume
          configMap:
            name: {{ include "adaptive.harmony.settingsConfigMap.fullname" . }}
        - name: alloy-config
          configMap:
            name: {{ include "adaptive.harmony.alloyConfigMap.fullname" . }}
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 8Gi
        # extra volume Mounts from values.yaml
        {{- with .Values.volumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- if .Values.tensorboard.enabled}}
{{- if .Values.tensorboard.persistentVolume.enabled }}
  volumeClaimTemplates:
    - apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: tensorboard-volume
        {{- if .Values.tensorboard.persistentVolume.annotations }}
        annotations:
{{ toYaml .Values.tensorboard.persistentVolume.annotations | indent 10 }}
        {{- end }}
        {{- if .Values.tensorboard.persistentVolume.labels }}
        labels:
{{ toYaml .Values.tensorboard.persistentVolume.labels | indent 10 }}
        {{- end }}
      spec:
        accessModes:
{{ toYaml .Values.tensorboard.persistentVolume.accessModes | indent 10 }}
        resources:
          requests:
            storage: "{{ .Values.tensorboard.persistentVolume.size }}"
      {{- if .Values.tensorboard.persistentVolume.storageClass }}
      {{- if (eq "-" .Values.tensorboard.persistentVolume.storageClass) }}
        storageClassName: ""
      {{- else }}
        storageClassName: "{{ .Values.tensorboard.persistentVolume.storageClass }}"
      {{- end }}
      {{- end }}
{{- else }}
        - name: tensorboard-volume
          emptyDir:
          {{- if .Values.tensorboard.emptyDir.sizeLimit }}
            sizeLimit: {{ .Values.tensorboard.emptyDir.sizeLimit }}
          {{- else }}
            {}
          {{- end -}}
{{- end }}
{{- end }}
